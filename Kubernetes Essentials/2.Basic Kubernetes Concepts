===========================
Basic Kubernetes Concepts :
===========================

=======================
1.Containers and Pods :
=======================
In order to run and manage containers with Kubernetes, you will need to use pods. In this lesson, we discuss the basics of what pods are and how they are related to containers within the world of Kubernetes. We will create a simple pod and then we will look at some ways to explore and interact with pods in your Kubernetes cluster.

Create a simple pod running an nginx container:
-----------------------------------------------
#cat << EOF | kubectl create -f -
apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
  - name: nginx
    image: nginx
EOF

Get a list of pods and verify that your new nginx pod is in the Running state:
-------------------------------------------------------------------------------
#kubectl get pods

Get more information about your nginx pod:
------------------------------------------
#kubectl describe pod nginx

Delete the pod:
---------------
#kubectl delete pod nginx




=========================
2. Clustering and Nodes :
=========================
Nodes are an essential part of the Kubernetes cluster. They are the machines where your cluster's container workloads are executed. In this lesson, we will discuss what nodes are in Kubernetes, and we will explore some ways in which you can find information about nodes in your cluster.

Get a list of nodes:
---------------------
#kubectl get nodes

Get more information about a specific node:
--------------------------------------------
#kubectl describe node $node_name



=============================
3. Networking in Kubernetes :
=============================
Networking is an important part of understanding the basics of Kubernetes. This lesson provides a high-level overview of what a Kubernetes virtual cluster network looks like. We will also demonstrate how the network functions by contacting one pod from another pod over the virtual network.

Create a deployment with two nginx pods:
----------------------------------------
cat << EOF | kubectl create -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.15.4
        ports:
        - containerPort: 80
EOF


Create a busybox pod to use for testing:
----------------------------------------
cat << EOF | kubectl create -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox
spec:
  containers:
  - name: busybox
    image: radial/busyboxplus:curl
    args:
    - sleep
    - "1000"
EOF

Get the IP addresses of your pods:
----------------------------------
kubectl get pods -o wide

Get the IP address of one of the nginx pods, then contact that nginx pod from the busybox pod using the nginx pod's IP address:
--------------------------------------------------------------------------------------------------------------------------------
kubectl exec busybox -- curl $nginx_pod_ip


===========================================
4. Kubernetes Architecture and Components :
===========================================
A Kubernetes cluster is made up of multiple individual components running on the various machines that are part of the cluster. In this lesson, we will briefly discuss the major Kubernetes software components and what each of them do. We will also look into how these components are actually running in our cluster currently.


Get a list of system pods running in the cluster:
--------------------------------------------------
kubectl get pods -n kube-system

Check the status of the kubelet service:
-----------------------------------------
sudo systemctl status kubelet

